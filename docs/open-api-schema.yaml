openapi: 3.0.3
info:
  title: referenceBook app project API
  version: 1.0.0
  description: It is API for referenceBook app
paths:
  /api/v1/telephoneNumbers:
    get:
      operationId: api_v1_telephoneNumbers_list
      summary: Get list of numbers
      tags:
      - TelephoneNumbers
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelephoneNumber'
          description: ''
    post:
      operationId: api_v1_telephoneNumbers_create
      summary: Create telephone number
      tags:
      - TelephoneNumbers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelephoneNumber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelephoneNumber'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelephoneNumber'
          description: ''
  /api/v1/telephoneNumbers/{id}:
    get:
      operationId: api_v1_telephoneNumbers_retrieve
      summary: Get telephone number
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this record.
        required: true
      tags:
      - TelephoneNumbers
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelephoneNumber'
          description: ''
    delete:
      operationId: api_v1_telephoneNumbers_destroy
      summary: Delete record
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this record.
        required: true
      tags:
      - TelephoneNumbers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/token:
    post:
      operationId: api_v1_token_create
      summary: "Login and get token"
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/token/refresh:
    post:
      operationId: api_v1_token_refresh_create
      summary: "Refresh token"
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/users:
    get:
      operationId: api_v1_users_list
      description: Only stuff can see all users
      summary: Get list of users
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_v1_users_create
      summary: Register user
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{username}:
    get:
      operationId: api_v1_users_retrieve
      summary: Get user
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '404':
            description: Not found
    delete:
      operationId: api_v1_users_destroy
      summary: Delete user
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
        '404':
          description: Not found
    head:
      operationId: api_v1_users_existence
      summary:  Check user existence
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
      tags:
        - User
      responses: 
        '200': 
          description: User exists. No response body
        '404':
          description: This user doesn't exist. No response body
      
components:
  schemas:
    TelephoneNumber:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
        owner_username:
          type: string
          readOnly: true
        number:
          type: string
          maxLength: 20
      required:
      - owner
      - owner_username
      - id
      - number
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
